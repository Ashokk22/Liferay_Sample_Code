/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.warrior.entitymanager.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.trash.model.TrashEntry;

import java.io.Serializable;

/**
 * The base model interface for the EntityManager service. Represents a row in the &quot;warrior_EntityManager&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.warrior.entitymanager.model.impl.EntityManagerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.warrior.entitymanager.model.impl.EntityManagerImpl}.
 * </p>
 *
 * @author HP
 * @see EntityManager
 * @see com.warrior.entitymanager.model.impl.EntityManagerImpl
 * @see com.warrior.entitymanager.model.impl.EntityManagerModelImpl
 * @generated
 */
public interface EntityManagerModel extends BaseModel<EntityManager>,
	TrashedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a entity manager model instance should use the {@link EntityManager} interface instead.
	 */

	/**
	 * Returns the primary key of this entity manager.
	 *
	 * @return the primary key of this entity manager
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this entity manager.
	 *
	 * @param primaryKey the primary key of this entity manager
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this entity manager.
	 *
	 * @return the uuid of this entity manager
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this entity manager.
	 *
	 * @param uuid the uuid of this entity manager
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the entity ID of this entity manager.
	 *
	 * @return the entity ID of this entity manager
	 */
	public long getEntityId();

	/**
	 * Sets the entity ID of this entity manager.
	 *
	 * @param entityId the entity ID of this entity manager
	 */
	public void setEntityId(long entityId);

	/**
	 * Returns the entity add date of this entity manager.
	 *
	 * @return the entity add date of this entity manager
	 */
	@AutoEscape
	public String getEntityAddDate();

	/**
	 * Sets the entity add date of this entity manager.
	 *
	 * @param entityAddDate the entity add date of this entity manager
	 */
	public void setEntityAddDate(String entityAddDate);

	/**
	 * Returns the title of this entity manager.
	 *
	 * @return the title of this entity manager
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this entity manager.
	 *
	 * @param title the title of this entity manager
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this entity manager.
	 *
	 * @return the description of this entity manager
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this entity manager.
	 *
	 * @param description the description of this entity manager
	 */
	public void setDescription(String description);

	/**
	 * Returns the entitystatus of this entity manager.
	 *
	 * @return the entitystatus of this entity manager
	 */
	public int getEntitystatus();

	/**
	 * Sets the entitystatus of this entity manager.
	 *
	 * @param entitystatus the entitystatus of this entity manager
	 */
	public void setEntitystatus(int entitystatus);

	/**
	 * Returns the company ID of this entity manager.
	 *
	 * @return the company ID of this entity manager
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this entity manager.
	 *
	 * @param companyId the company ID of this entity manager
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this entity manager.
	 *
	 * @return the group ID of this entity manager
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this entity manager.
	 *
	 * @param groupId the group ID of this entity manager
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this entity manager.
	 *
	 * @return the user ID of this entity manager
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this entity manager.
	 *
	 * @param userId the user ID of this entity manager
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this entity manager.
	 *
	 * @return the user uuid of this entity manager
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this entity manager.
	 *
	 * @param userUuid the user uuid of this entity manager
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the vocubalary ID of this entity manager.
	 *
	 * @return the vocubalary ID of this entity manager
	 */
	public long getVocubalaryId();

	/**
	 * Sets the vocubalary ID of this entity manager.
	 *
	 * @param vocubalaryId the vocubalary ID of this entity manager
	 */
	public void setVocubalaryId(long vocubalaryId);

	/**
	 * Returns the category ID of this entity manager.
	 *
	 * @return the category ID of this entity manager
	 */
	public long getCategoryId();

	/**
	 * Sets the category ID of this entity manager.
	 *
	 * @param categoryId the category ID of this entity manager
	 */
	public void setCategoryId(long categoryId);

	/**
	 * Returns the status of this entity manager.
	 *
	 * @return the status of this entity manager
	 */
	@Override
	public int getStatus();

	/**
	 * Returns the trash entry created when this entity manager was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this entity manager.
	 *
	 * @return the trash entry created when this entity manager was moved to the Recycle Bin
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException;

	/**
	 * Returns the class primary key of the trash entry for this entity manager.
	 *
	 * @return the class primary key of the trash entry for this entity manager
	 */
	@Override
	public long getTrashEntryClassPK();

	/**
	 * Returns the trash handler for this entity manager.
	 *
	 * @return the trash handler for this entity manager
	 */
	@Override
	public TrashHandler getTrashHandler();

	/**
	 * Returns <code>true</code> if this entity manager is in the Recycle Bin.
	 *
	 * @return <code>true</code> if this entity manager is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrash();

	/**
	 * Returns <code>true</code> if the parent of this entity manager is in the Recycle Bin.
	 *
	 * @return <code>true</code> if the parent of this entity manager is in the Recycle Bin; <code>false</code> otherwise
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public boolean isInTrashContainer();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(EntityManager entityManager);

	@Override
	public int hashCode();

	@Override
	public CacheModel<EntityManager> toCacheModel();

	@Override
	public EntityManager toEscapedModel();

	@Override
	public EntityManager toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}